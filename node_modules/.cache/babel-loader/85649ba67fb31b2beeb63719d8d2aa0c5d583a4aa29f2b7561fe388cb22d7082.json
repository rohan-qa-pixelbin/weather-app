{"ast":null,"code":"var _jsxFileName = \"/Users/rohanpatil/Documents/Work/Repos/weather-app copy/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SearchBox from \"./components/SearchBox\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport Favorites from \"./components/Favorites\";\nimport WeatherDashboard from \"./components/WeatherDashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [favorites, setFavorites] = useState([]);\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n  const apiKey = \"5ba1ba361346bd0040e36995c3799606\";\n  const fetchWeatherData = city => {\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`;\n    fetch(url).then(response => response.json()).then(data => {\n      if (data.cod === 200) {\n        setWeatherData(data);\n      } else {\n        alert(\"City not found\");\n      }\n    }).catch(error => {\n      console.error(\"Error fetching weather data:\", error);\n    });\n  };\n  const addFavorite = city => {\n    if (!favorites.includes(city)) {\n      setFavorites([...favorites, city]);\n    }\n  };\n  const selectFavorite = city => {\n    fetchWeatherData(city);\n  };\n  const handleRemoveFavorite = cityToRemove => {\n    setFavorites(favorites.filter(city => city !== cityToRemove));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      onSearch: fetchWeatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      weatherData: weatherData,\n      onAddFavorite: addFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Favorites, {\n      favorites: favorites,\n      onSelectFavorite: selectFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to remove a city from favorites\n_s(App, \"MeoMvzNrlz1e7DacTpmAmo4jHhg=\");\n_c = App;\nconst handleRemoveFavorite = cityToRemove => {\n  setFavorites(favorites.filter(city => city !== cityToRemove));\n};\n\n// Render Favorites component\n/*#__PURE__*/_jsxDEV(Favorites, {\n  favorites: favorites,\n  onRemoveFavorite: handleRemoveFavorite\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 1\n}, this);\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBox","WeatherCard","Favorites","WeatherDashboard","jsxDEV","_jsxDEV","favorites","setFavorites","App","_s","weatherData","setWeatherData","apiKey","fetchWeatherData","city","url","fetch","then","response","json","data","cod","alert","catch","error","console","addFavorite","includes","selectFavorite","handleRemoveFavorite","cityToRemove","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onAddFavorite","onSelectFavorite","_c","onRemoveFavorite","$RefreshReg$"],"sources":["/Users/rohanpatil/Documents/Work/Repos/weather-app copy/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport SearchBox from \"./components/SearchBox\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport Favorites from \"./components/Favorites\";\nimport WeatherDashboard from \"./components/WeatherDashboard\" \nconst [favorites, setFavorites] = useState([]);\nconst App = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n\n  const apiKey = \"5ba1ba361346bd0040e36995c3799606\";\n\n  const fetchWeatherData = (city) => {\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.cod === 200) {\n          setWeatherData(data);\n        } else {\n          alert(\"City not found\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching weather data:\", error);\n      });\n  };\n\n  const addFavorite = (city) => {\n    if (!favorites.includes(city)) {\n      setFavorites([...favorites, city]);\n    }\n  };\n\n  const selectFavorite = (city) => {\n    fetchWeatherData(city);\n  };\n    \n     const handleRemoveFavorite = (cityToRemove) => {\n       setFavorites(favorites.filter((city) => city !== cityToRemove));\n     };\n\n  return (\n    <div className=\"container\">\n      <h1>Weather Dashboard</h1>\n      <SearchBox onSearch={fetchWeatherData} />\n      <WeatherCard weatherData={weatherData} onAddFavorite={addFavorite} />\n      <Favorites favorites={favorites} onSelectFavorite={selectFavorite} />\n          \n    </div>\n  );\n};\n\n\n\n// Function to remove a city from favorites\nconst handleRemoveFavorite = (cityToRemove) => {\n  setFavorites(favorites.filter((city) => city !== cityToRemove));\n};\n\n// Render Favorites component\n<Favorites\n  favorites={favorites}\n \n  onRemoveFavorite={handleRemoveFavorite}\n/>;\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}